from building import *
from gcc import GetGCCLikePLATFORM

cwd     = GetCurrentDir()
src     = Split('''
shell.c
msh.c
msh_parse.c
''')

CPPPATH = [cwd]
LOCAL_CFLAGS = ''

if rtconfig.PLATFORM in GetGCCLikePLATFORM():
    LOCAL_CFLAGS += ' -Wstack-usage=' + str(GetConfigValue('FINSH_THREAD_STACK_SIZE')) # check finsh thread stack size
    LOCAL_CFLAGS += ' -Wunused' # unused warning
    LOCAL_CFLAGS += ' -Wformat -Wformat-security' # printf/scanf format warning
    LOCAL_CFLAGS += ' -Warray-bounds -Wuninitialized' # memory access warning
    LOCAL_CFLAGS += ' -Wreturn-type -Wcomment -Wswitch' # code style warning
    LOCAL_CFLAGS += ' -Wparentheses -Wlogical-op ' # operation warning
    LOCAL_CFLAGS += ' -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes' # function declaration warning
    if 'mips' not in rtconfig.PREFIX: # mips toolchain does not support
        LOCAL_CFLAGS += ' -Wimplicit-fallthrough' # implicit fallthrough warning
        LOCAL_CFLAGS += ' -Wduplicated-cond -Wduplicated-branches' # duplicated condition warning

if GetDepend('MSH_USING_BUILT_IN_COMMANDS'):
    src += ['cmd.c']

if GetDepend('DFS_USING_POSIX'):
    src += ['msh_file.c']

group = DefineGroup('Finsh', src, depend = ['RT_USING_FINSH'], CPPPATH = CPPPATH,
                    LOCAL_CFLAGS = LOCAL_CFLAGS)

Return('group')
