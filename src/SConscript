from building import *
from gcc import GetGCCLikePLATFORM
import os

src = Glob('*.c')
cwd = GetCurrentDir()

inc = [os.path.join(cwd, '..', 'include')]

LOCAL_CFLAGS = ''

if GetDepend('RT_USING_SMALL_MEM') == False:
    SrcRemove(src, ['mem.c'])

if GetDepend('RT_USING_SLAB') == False:
    SrcRemove(src, ['slab.c'])

if GetDepend('RT_USING_MEMPOOL') == False:
    SrcRemove(src, ['mempool.c'])

if GetDepend('RT_USING_MEMHEAP') == False:
    SrcRemove(src, ['memheap.c'])

if GetDepend('RT_USING_SIGNALS') == False:
    SrcRemove(src, ['signal.c'])

if GetDepend('RT_USING_DEVICE') == False:
    SrcRemove(src, ['device.c'])

if GetDepend('RT_USING_SMP') == False:
    SrcRemove(src, ['cpu.c', 'scheduler_mp.c'])

if GetDepend('RT_USING_SMP') == True:
    SrcRemove(src, ['scheduler_up.c'])

if rtconfig.PLATFORM in GetGCCLikePLATFORM():
    LOCAL_CFLAGS += ' -Wunused-parameter -Wunused -Wreturn-type -Wformat -Wswitch' # -Wmissing-prototypes -Wstrict-prototypes -Wmissing-declarations

group = DefineGroup('Kernel', src, depend = [''], CPPPATH = inc, CPPDEFINES = ['__RTTHREAD__'], LOCAL_CFLAGS=LOCAL_CFLAGS)

Return('group')
