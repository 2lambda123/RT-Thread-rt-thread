
from building import *

cwd     = GetCurrentDir()
CPPPATH = [cwd + '/include',]

def _load_lib():
    LIBS    = ['libxil',]
    LIBPATH = [cwd + '/lib']

    return DefineGroup('zynq_hal', [],
                        depend = [], 
                        CPPPATH = CPPPATH,
                        LIBS = LIBS,
                        LIBPATH = LIBPATH)

def _load_src():
    src = []
    src += Glob('libsrc/standalone_v6_5/src/x*.c') # skip libc
    src += Glob('libsrc/scutimer_v2_1/src/*.c')
    if GetDepend('BSP_USING_GPIO'):
        src += Glob('libsrc/gpiops_v3_3/src/*.c')
    if GetDepend('BSP_USING_UART'):
        src += Glob('libsrc/uartps_v3_5/src/*.c')
    if GetDepend('BSP_USING_SPIFLASH'):
        src += Glob('libsrc/qspips_v3_4/src/*.c')
    if GetDepend('BSP_USING_SDIO'):
        src += Glob('libsrc/sdps_v3_3/src/*.c')
    
    return DefineGroup('zynq_hal', src,
                    depend = [], 
                    CPPPATH = CPPPATH)

if GetDepend('BSP_USING_SDK_SRC'):
    group = _load_src()
else:
    group = _load_lib()

Return('group')
